# Multi-stage Docker build for Gibson Framework
# Production-optimized build with security best practices

# Build stage
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    git \
    ca-certificates \
    gcc \
    musl-dev \
    sqlite-dev

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download && go mod verify

# Copy source code
COPY . .

# Build the application with optimizations
RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build \
    -ldflags='-w -s -extldflags "-static"' \
    -a -installsuffix cgo \
    -o gibson \
    ./main.go

# Build additional utilities
RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build \
    -ldflags='-w -s -extldflags "-static"' \
    -a -installsuffix cgo \
    -o gibson-test \
    ./cmd/test/main.go

# Production stage
FROM alpine:3.18

# Install runtime dependencies
RUN apk add --no-cache \
    ca-certificates \
    sqlite \
    curl \
    tzdata \
    && rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -g 1001 gibson && \
    adduser -D -u 1001 -G gibson gibson

# Create necessary directories
RUN mkdir -p /app/data /app/logs /app/config /app/plugins /app/reports \
    && chown -R gibson:gibson /app

# Copy binary from builder
COPY --from=builder --chown=gibson:gibson /app/gibson /app/gibson
COPY --from=builder --chown=gibson:gibson /app/gibson-test /app/gibson-test

# Copy configuration templates
COPY --chown=gibson:gibson configs/production.yaml /app/config/gibson.yaml
COPY --chown=gibson:gibson scripts/entrypoint.sh /app/entrypoint.sh

# Make scripts executable
RUN chmod +x /app/entrypoint.sh /app/gibson /app/gibson-test

# Set working directory
WORKDIR /app

# Switch to non-root user
USER gibson

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose port
EXPOSE 8080

# Set environment variables
ENV GIBSON_CONFIG_FILE=/app/config/gibson.yaml
ENV GIBSON_LOG_LEVEL=info
ENV GIBSON_LOG_FILE=/app/logs/gibson.log
ENV GIBSON_DATA_DIR=/app/data
ENV GIBSON_PLUGINS_DIR=/app/plugins

# Volume mounts for persistent data
VOLUME ["/app/data", "/app/logs", "/app/plugins", "/app/reports"]

# Entry point
ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["server"]